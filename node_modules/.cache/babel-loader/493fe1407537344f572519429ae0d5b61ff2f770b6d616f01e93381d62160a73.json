{"ast":null,"code":"var _jsxFileName = \"/Users/rachelgapasin/Documents/websites/facts-logger/src/Fact.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport supabase from \"./supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = [{\n  name: \"technology\",\n  color: \"#3b82f6\"\n}, {\n  name: \"science\",\n  color: \"#16a34a\"\n}, {\n  name: \"finance\",\n  color: \"#ef4444\"\n}, {\n  name: \"society\",\n  color: \"#eab308\"\n}, {\n  name: \"entertainment\",\n  color: \"#db2777\"\n}, {\n  name: \"health\",\n  color: \"#14b8a6\"\n}, {\n  name: \"history\",\n  color: \"#f97316\"\n}, {\n  name: \"news\",\n  color: \"#8b5cf6\"\n}];\nfunction Fact({\n  fact,\n  setFacts\n}) {\n  _s();\n  const [isUpdating, setIsUpdating] = useState(false);\n  async function handleVote() {\n    const {\n      data: updatedFact,\n      error\n    } = await supabase.from(\"facts\").update({\n      votesInteresting: fact.votesInteresting + 1\n    }).eq(\"id\", fact.id).select();\n    if (!error) setFacts(facts => facts.map(f => f.id === fact.id ? updatedFact[0] : f));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"fact\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [fact.text, /*#__PURE__*/_jsxDEV(\"a\", {\n          href: fact.source,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          className: \"source\",\n          children: \"(Source)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        style: {\n          backgroundColor: CATEGORIES.find(category => category.name === fact.category).color\n        },\n        children: fact.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVote,\n          children: [\"\\uD83D\\uDC4D \", fact.votesInteresting]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"\\uD83E\\uDD2F \", fact.votesMindblowing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"\\u26D4\\uFE0F \", fact.votesFalse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Fact, \"Iu9QP35HOe9AU5k2QizHmZa0ji4=\");\n_c = Fact;\nexport default Fact;\nvar _c;\n$RefreshReg$(_c, \"Fact\");","map":{"version":3,"names":["React","supabase","jsxDEV","_jsxDEV","CATEGORIES","name","color","Fact","fact","setFacts","_s","isUpdating","setIsUpdating","useState","handleVote","data","updatedFact","error","from","update","votesInteresting","eq","id","select","facts","map","f","children","className","text","href","source","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","find","category","onClick","votesMindblowing","votesFalse","_c","$RefreshReg$"],"sources":["/Users/rachelgapasin/Documents/websites/facts-logger/src/Fact.js"],"sourcesContent":["import React from \"react\";\nimport supabase from \"./supabase\";\n\nconst CATEGORIES = [\n  { name: \"technology\", color: \"#3b82f6\" },\n  { name: \"science\", color: \"#16a34a\" },\n  { name: \"finance\", color: \"#ef4444\" },\n  { name: \"society\", color: \"#eab308\" },\n  { name: \"entertainment\", color: \"#db2777\" },\n  { name: \"health\", color: \"#14b8a6\" },\n  { name: \"history\", color: \"#f97316\" },\n  { name: \"news\", color: \"#8b5cf6\" },\n];\n\nfunction Fact({ fact, setFacts }) {\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  async function handleVote() {\n    \n    const { data: updatedFact, error } = await supabase\n      .from(\"facts\")\n      .update({ votesInteresting: fact.votesInteresting + 1 })\n      .eq(\"id\", fact.id)\n      .select();\n\n      if (!error) setFacts((facts) => facts.map((f) => f.id === fact.id ? updatedFact[0] : f))\n  }\n\n  return (\n    <div>\n      <li className=\"fact\">\n        <p>\n          {fact.text}\n          <a\n            href={fact.source}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"source\"\n          >\n            (Source)\n          </a>\n        </p>\n        <span\n          className=\"tag\"\n          style={{\n            backgroundColor: CATEGORIES.find(\n              (category) => category.name === fact.category\n            ).color,\n          }}\n        >\n          {fact.category}\n        </span>\n        <div className=\"vote-buttons\">\n          <button onClick={handleVote}>üëç {fact.votesInteresting}</button>\n          <button>ü§Ø {fact.votesMindblowing}</button>\n          <button>‚õîÔ∏è {fact.votesFalse}</button>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nexport default Fact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}